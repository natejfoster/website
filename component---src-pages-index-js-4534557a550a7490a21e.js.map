{"version":3,"sources":["webpack:///./src/components/imageCard.js","webpack:///./src/components/homeLayout.js","webpack:///./src/pages/index.js"],"names":["ImageBlock","props","react_default","a","createElement","Block","key","text","className","StyledLink","to","url","styled","div","withConfig","displayName","componentId","Link","HomeLayout","_ref","children","gatsby_browser_entry","query","render","data","Fragment","Helmet_default","title","site","siteMetadata","link","rel","type","href","favicon","meta","name","content","lang","_1266923843","propTypes","PropTypes","node","isRequired","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","homeLayout","Splash","gatsby_image_default","fluid","imageSplash","childImageSharp","style","ImageWrapper","imageCard","imageAbout","imageStyle","imagePhotography","imageProjects","imageJournal","footer","position","left","top","width","height","zIndex"],"mappings":"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","file":"component---src-pages-index-js-4534557a550a7490a21e.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ImageBlock = (props) => {\n\n  return (\n    <Block key={props.text} className='imageBlock'>\n      <StyledLink to={props.url}>\n          <h3 className='imageCard'>{props.text}</h3>\n      </StyledLink>\n    </Block>\n  )\n}\n \nexport default ImageBlock;\n\nconst Block = styled.div`\n  height: 100%;\n  width: 100%;\n\n  &:hover {\n    opacity: .50;\n    background-color: black;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  position: relative;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%; \n  text-decoration: none;\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport favicon from '../images/favicon.ico'\n\nimport '../css/layout.css'\n\nconst HomeLayout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query HomeTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          link={[\n            { rel: 'shortcut icon', type: 'image/png', href: `${favicon}` }\n          ]}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <div>\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nHomeLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default HomeLayout;\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport ImageCard from '../components/imageCard'\nimport HomeLayout from '../components/homeLayout'\nimport Footer from '../components/footer'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nconst IndexPage = (props) => (\n  <HomeLayout>\n    <div className='container'>\n      <Splash className='splash'>\n        <div>\n          <h1 className='splashName'>Nathan J Foster</h1>\n          <h2 className='splashText'>Developer. Photographer. Adventurer.</h2>\n        </div>\n        <Img fluid={props.data.imageSplash.childImageSharp.fluid} style={imageSplash} />\n      </Splash>\n      <ImageWrapper className='about'>\n        <ImageCard text='About' url='/about'/>\n        <Img fluid={props.data.imageAbout.childImageSharp.fluid} style={imageStyle} />\n      </ImageWrapper>\n      <ImageWrapper className='photography'>\n        <ImageCard text='Photography' url='/photography' />\n        <Img fluid={props.data.imagePhotography.childImageSharp.fluid} style={imageStyle} />\n      </ImageWrapper>\n      <ImageWrapper className='projects'>\n        <ImageCard text='Projects' url='/projects' />\n        <Img fluid={props.data.imageProjects.childImageSharp.fluid} style={imageStyle} />\n      </ImageWrapper>\n      <ImageWrapper className='journal'>\n        <ImageCard text='Journal' url='/journal' />\n        <Img fluid={props.data.imageJournal.childImageSharp.fluid} style={imageStyle} />\n      </ImageWrapper>\n    </div>\n    <Footer />\n  </HomeLayout>\n)\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    imageSplash: file(relativePath: { eq: \"IMG_4004.jpg\" }) {\n      ...fluidImage\n    }\n    imageAbout: file(relativePath: { eq: \"profile.jpg\" }) {\n      ...fluidImage\n    }\n    imagePhotography: file(relativePath: { eq: \"IMG_1700.jpg\" }) {\n      ...fluidImage\n    }\n    imageJournal: file(relativePath: { eq: \"IMG_4632.jpg\" }) {\n      ...fluidImage\n    }\n    imageProjects: file(relativePath: { eq: \"IMG_4893.jpg\" }) {\n      ...fluidImage\n    }\n  }\n`\n\nconst Splash = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-family: 'Stalemate', cursive !important;\n  font-size: 150%;\n  position: relative;\n`\n\nconst ImageWrapper = styled.div`\n  position: relative;\n`\n\nconst imageStyle = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n  zIndex: -1\n}\n\nconst imageSplash = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100vh\",\n  zIndex: -1\n}\n"],"sourceRoot":""}